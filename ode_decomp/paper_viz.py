import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

base_results = {
    "bounces": [283, 670, 978, 781, 790, 814, 602, 539, 849, 697, 809, 430, 610, 408, 885, 748, 445, 508, 702, 278, 506, 946, 834, 747, 502, 1167, 1257, 719, 1686, 783, 1244, 1216, 765, 718, 781, 418, 718, 722, 440, 986, 686, 1222, 1104, 407, 366, 620, 936, 612, 593, 391, 453, 533, 485, 896, 844, 765, 903, 320, 801, 884, 964, 1026, 663, 1036, 913, 1087, 609, 930, 979, 583, 467, 1067, 504, 399, 878, 810, 380, 1084, 621, 883, 391, 540, 1006, 618, 488, 481, 1143, 581, 610, 624, 337, 438, 748, 639, 856, 881, 437, 471, 589, 1141, 562, 476, 380, 1828, 1246, 968, 591, 822, 802, 913, 685, 394, 671, 710, 362, 717, 818, 687, 577, 814, 486, 467, 477, 610, 405, 567, 1490, 923],
    "revenue":  [3837.0, 3797.0, 3806.0, 3830.0, 3835.0, 3838.0, 3814.0, 3783.0, 3829.0, 3727.0, 3815.0, 3761.0, 3888.0, 3767.0, 3717.0, 3845.0, 3697.0, 3730.0, 3761.0, 3726.0, 3853.0, 3888.0, 3876.0, 3781.0, 3709.0, 3811.0, 3811.0, 3817.0, 3818.0, 3783.0, 3849.0, 3755.0, 4012.0, 3824.0, 3741.0, 3833.0, 3860.0, 3803.0, 3728.0, 3847.0, 3740.0, 3932.0, 3755.0, 3796.0, 3906.0, 3780.0, 3731.0, 3797.0, 3863.0, 3846.0, 3830.0, 3812.0, 3801.0, 3736.0, 3748.0, 3683.0, 3852.0, 3729.0, 3786.0, 3770.0, 3799.0, 3825.0, 3898.0, 3771.0, 3672.0, 3865.0, 3817.0, 3751.0, 3773.0, 3806.0, 3796.0, 3813.0, 3811.0, 3652.0, 3898.0, 3704.0, 3879.0, 3949.0, 3777.0, 3784.0, 3766.0, 3816.0, 3754.0, 3840.0, 3756.0, 3761.0, 3888.0, 3713.0, 3801.0, 3754.0, 3813.0, 3806.0, 3851.0, 3844.0, 3873.0, 3788.0, 3860.0, 3676.0, 3860.0, 3810.0, 3966.0, 3719.0, 3827.0, 3724.0, 3875.0, 3756.0, 3735.0, 3778.0, 3783.0, 3912.0, 3751.0, 3822.0, 3708.0, 3809.0, 3786.0, 3869.0, 3957.0, 3805.0, 3707.0, 3764.0, 3769.0, 3734.0, 3705.0, 3846.0, 3818.0, 3737.0, 3638.0, 3845.0],
    "rebalancing": [1385.0, 1472.0, 1519.0, 1470.0, 1442.0, 1544.0, 1419.0, 1464.0, 1393.0, 1476.0, 1366.0, 1390.0, 1474.0, 1458.0, 1484.0, 1457.0, 1388.0, 1391.0, 1394.0, 1377.0, 1532.0, 1507.0, 1517.0, 1417.0, 1419.0, 1439.0, 1365.0, 1510.0, 1498.0, 1478.0, 1488.0, 1392.0, 1492.0, 1393.0, 1383.0, 1349.0, 1493.0, 1492.0, 1412.0, 1416.0, 1412.0, 1485.0, 1344.0, 1499.0, 1457.0, 1476.0, 1462.0, 1426.0, 1396.0, 1473.0, 1390.0, 1471.0, 1411.0, 1431.0, 1418.0, 1411.0, 1498.0, 1441.0, 1390.0, 1426.0, 1494.0, 1430.0, 1456.0, 1419.0, 1450.0, 1412.0, 1416.0, 1482.0, 1485.0, 1497.0, 1405.0, 1471.0, 1463.0, 1372.0, 1449.0, 1469.0, 1503.0, 1526.0, 1521.0, 1550.0, 1446.0, 1461.0, 1418.0, 1476.0, 1499.0, 1464.0, 1549.0, 1394.0, 1462.0, 1373.0, 1478.0, 1403.0, 1525.0, 1383.0, 1473.0, 1423.0, 1456.0, 1431.0, 1390.0, 1445.0, 1426.0, 1482.0, 1380.0, 1531.0, 1553.0, 1505.0, 1414.0, 1519.0, 1430.0, 1498.0, 1482.0, 1419.0, 1408.0, 1400.0, 1496.0, 1463.0, 1467.0, 1433.0, 1414.0, 1366.0, 1443.0, 1457.0, 1457.0, 1410.0, 1557.0, 1497.0, 1467.0, 1469.0]
        }

full_results = {
    "bounces": [378, 227, 295, 376, 283, 187, 215, 253, 306, 185, 285, 293, 613, 274, 269, 284, 298, 248, 255, 208, 277, 399, 178, 296, 206, 208, 171, 336, 252, 294, 256, 443, 355, 239, 220, 316, 239, 292, 220, 263, 294, 211, 247, 271, 793, 162, 173, 392, 179, 297, 212, 229, 263, 240, 312, 355, 281, 329, 281, 212, 238, 322, 286, 219, 300, 133, 259, 384, 218, 552, 162, 590, 223, 252, 533, 182, 210, 252, 184, 256, 197, 296, 250, 241, 302, 252, 236, 281, 231, 291, 422, 216, 586, 227, 236, 298, 270, 290, 482, 241, 309, 210, 280, 178, 328, 316, 253, 210, 238, 136, 203, 335, 460, 346, 187, 347, 210, 200, 329, 304, 268, 214, 292, 388, 347, 360, 326, 218],
    "revenue": [3708.599999999959, 3814.4999999999573, 3781.649999999967, 3864.899999999954, 3848.5499999999734, 3858.7499999999536, 3811.049999999955, 3814.9999999999654, 3723.5999999999563, 3720.899999999974, 3730.0499999999533, 3686.1999999999666, 3813.3499999999535, 3807.4499999999694, 3838.8999999999587, 3713.1499999999673, 3748.749999999961, 3944.999999999959, 3851.9999999999504, 3890.7999999999606, 3878.199999999962, 3738.249999999957, 3896.299999999965, 3851.149999999968, 3839.649999999969, 3878.0499999999593, 3787.1499999999564, 3850.6499999999455, 3752.349999999967, 3782.3999999999683, 3880.0999999999576, 3792.9499999999734, 3717.2999999999656, 3695.449999999958, 3872.549999999958, 3912.849999999961, 3736.1999999999575, 3696.5499999999724, 3888.8499999999617, 3861.049999999965, 3692.2999999999706, 3742.149999999972, 3704.59999999996, 3892.5999999999617, 3768.749999999961, 3801.049999999964, 3854.9499999999694, 3736.2999999999624, 3845.1999999999525, 3897.9999999999577, 3723.1999999999516, 3782.89999999996, 3809.149999999958, 3721.1999999999607, 3817.49999999995, 3789.4999999999636, 3785.099999999958, 3797.199999999949, 3744.949999999962, 3739.399999999959, 3903.5499999999606, 3808.1499999999533, 3889.999999999949, 3717.4999999999595, 3842.6999999999534, 3793.2999999999665, 3734.6999999999584, 3887.79999999994, 3852.649999999966, 3904.899999999963, 3951.0499999999606, 3779.3999999999614, 3782.79999999996, 3931.499999999951, 3786.9999999999563, 3782.2999999999556, 3715.3999999999714, 3885.349999999953, 3818.249999999954, 3857.9999999999563, 3818.4499999999493, 3812.399999999972, 3812.7999999999615, 3869.5999999999663, 3958.149999999955, 3749.649999999962, 3778.499999999954, 3757.4999999999673, 3827.749999999958, 3768.249999999968, 3836.899999999964, 3664.149999999969, 3795.9999999999645, 3848.7999999999643, 3769.6499999999573, 3804.549999999964, 3723.749999999968, 3810.199999999958, 3857.1999999999616, 3780.7999999999656, 3798.8999999999573, 3856.1999999999684, 3847.4999999999654, 3822.9499999999593, 3952.9499999999694, 3809.9499999999566, 3842.3999999999614, 3784.299999999968, 3805.7999999999624, 3815.599999999967, 3775.6999999999603, 3856.349999999958, 3707.399999999964, 3931.64999999996, 3790.1499999999655, 3868.549999999962, 3871.749999999959, 3837.6499999999555, 3834.79999999996, 3918.299999999964, 3809.149999999959, 3847.0499999999606, 3938.1499999999655, 3796.6499999999696, 3874.8499999999563, 3747.3499999999567, 3870.19999999996, 3763.3499999999653],
    "rebalancing": [1324.0, 1313.0, 1230.0, 1325.0, 1298.0, 1240.0, 1249.0, 1324.0, 1200.0, 1173.0, 1325.0, 1301.0, 1317.0, 1329.0, 1349.0, 1312.0, 1206.0, 1326.0, 1281.0, 1290.0, 1178.0, 1323.0, 1244.0, 1276.0, 1235.0, 1190.0, 1329.0, 1301.0, 1206.0, 1269.0, 1295.0, 1338.0, 1265.0, 1264.0, 1281.0, 1306.0, 1248.0, 1320.0, 1320.0, 1282.0, 1220.0, 1143.0, 1248.0, 1258.0, 1328.0, 1222.0, 1283.0, 1252.0, 1288.0, 1324.0, 1263.0, 1210.0, 1236.0, 1271.0, 1296.0, 1319.0, 1267.0, 1232.0, 1292.0, 1259.0, 1275.0, 1294.0, 1308.0, 1247.0, 1289.0, 1265.0, 1194.0, 1246.0, 1182.0, 1240.0, 1301.0, 1286.0, 1283.0, 1429.0, 1284.0, 1253.0, 1253.0, 1259.0, 1183.0, 1308.0, 1262.0, 1280.0, 1318.0, 1223.0, 1292.0, 1320.0, 1280.0, 1266.0, 1290.0, 1131.0, 1329.0, 1169.0, 1243.0, 1251.0, 1272.0, 1259.0, 1185.0, 1266.0, 1326.0, 1250.0, 1211.0, 1255.0, 1266.0, 1228.0, 1354.0, 1231.0, 1269.0, 1262.0, 1276.0, 1237.0, 1192.0, 1262.0, 1268.0, 1436.0, 1248.0, 1169.0, 1240.0, 1249.0, 1227.0, 1316.0, 1199.0, 1239.0, 1372.0, 1267.0, 1276.0, 1220.0, 1268.0, 1213.0]
        }

no_price = {
    "bounces": [309, 200, 169, 251, 270, 194, 284, 189, 244, 172, 157, 192, 174, 306, 197, 219, 231, 186, 177, 289, 280, 246, 153, 175, 189, 275, 242, 285, 213, 265, 362, 139, 207, 152, 180, 167, 443, 457, 174, 202, 198, 229, 313, 225, 201, 227, 579, 166, 248, 205, 310, 510, 204, 227, 175, 1150, 339, 197, 330, 247, 162, 207, 281, 200, 376, 241, 227, 283, 272, 259, 238, 163, 262, 267, 309, 269, 114, 239, 223, 454, 151, 192, 550, 238, 196, 191, 270, 238, 209, 278, 183, 376, 307, 210, 331, 200, 178, 207, 325, 248, 216, 242, 236, 701, 277, 216, 97, 244, 278, 153, 290, 265, 333, 394, 234, 172, 346, 179, 168, 205, 171, 447, 412, 199, 192, 331, 222, 218],
    
    "revenue": [3895.0, 3836.0, 3934.0, 3887.0, 3911.0, 3882.0, 3917.0, 3876.0, 3799.0, 3901.0, 3892.0, 3872.0, 3866.0, 3897.0, 3866.0, 4015.0, 3862.0, 3781.0, 3892.0, 4017.0, 3916.0, 3862.0, 3898.0, 3910.0, 3795.0, 3988.0, 4009.0, 3925.0, 3935.0, 3938.0, 3849.0, 3777.0, 3859.0, 3856.0, 3925.0, 3870.0, 3809.0, 3980.0, 3854.0, 3866.0, 3910.0, 3701.0, 3830.0, 3872.0, 3932.0, 3880.0, 3893.0, 3907.0, 3976.0, 3871.0, 3909.0, 3916.0, 3958.0, 3954.0, 3976.0, 3944.0, 3898.0, 3851.0, 3913.0, 3797.0, 3897.0, 3900.0, 3992.0, 3857.0, 3954.0, 3920.0, 3908.0, 3958.0, 3840.0, 3920.0, 3866.0, 3825.0, 3860.0, 3923.0, 3877.0, 3962.0, 3855.0, 3845.0, 3880.0, 3894.0, 3752.0, 3879.0, 3926.0, 3926.0, 3866.0, 3801.0, 3877.0, 3862.0, 3861.0, 3884.0, 4003.0, 3891.0, 3845.0, 3917.0, 3915.0, 3791.0, 3893.0, 3842.0, 3930.0, 3879.0, 3819.0, 3990.0, 3920.0, 3922.0, 3865.0, 3819.0, 3828.0, 3836.0, 3922.0, 4005.0, 3851.0, 3840.0, 3827.0, 3750.0, 3899.0, 3904.0, 3959.0, 3791.0, 3986.0, 3840.0, 3869.0, 3871.0, 4003.0, 3914.0, 3863.0, 3810.0, 3861.0, 4014.0],
    "rebalancing": [1538.0, 1553.0, 1548.0, 1524.0, 1514.0, 1494.0, 1557.0, 1493.0, 1447.0, 1503.0, 1380.0, 1421.0, 1530.0, 1473.0, 1507.0, 1517.0, 1522.0, 1454.0, 1507.0, 1533.0, 1400.0, 1461.0, 1487.0, 1535.0, 1472.0, 1458.0, 1557.0, 1576.0, 1426.0, 1590.0, 1575.0, 1487.0, 1466.0, 1489.0, 1601.0, 1520.0, 1461.0, 1572.0, 1448.0, 1404.0, 1536.0, 1421.0, 1512.0, 1518.0, 1533.0, 1599.0, 1619.0, 1537.0, 1515.0, 1516.0, 1567.0, 1589.0, 1512.0, 1493.0, 1579.0, 1483.0, 1526.0, 1553.0, 1490.0, 1550.0, 1404.0, 1487.0, 1588.0, 1467.0, 1595.0, 1504.0, 1479.0, 1514.0, 1476.0, 1429.0, 1470.0, 1440.0, 1534.0, 1667.0, 1470.0, 1531.0, 1526.0, 1471.0, 1674.0, 1510.0, 1438.0, 1455.0, 1510.0, 1485.0, 1516.0, 1537.0, 1522.0, 1476.0, 1474.0, 1597.0, 1481.0, 1515.0, 1503.0, 1471.0, 1642.0, 1552.0, 1553.0, 1582.0, 1484.0, 1450.0, 1492.0, 1504.0, 1440.0, 1514.0, 1503.0, 1448.0, 1413.0, 1546.0, 1522.0, 1571.0, 1421.0, 1487.0, 1572.0, 1521.0, 1507.0, 1555.0, 1504.0, 1503.0, 1457.0, 1410.0, 1423.0, 1487.0, 1577.0, 1459.0, 1548.0, 1573.0, 1473.0, 1478.0]
        }

no_xdiff = {
    "bounces": [248, 173, 257, 250, 220, 284, 297, 175, 266, 190, 242, 297, 167, 300, 188, 224, 333, 228, 211, 237, 154, 201, 391, 381, 200, 382, 169, 189, 522, 191, 661, 235, 377, 286, 170, 263, 230, 131, 276, 229, 316, 105, 516, 293, 424, 168, 357, 346, 884, 256, 283, 214, 334, 193, 310, 256, 301, 305, 442, 267, 186, 271, 275, 171, 225, 195, 281, 386, 218, 240, 196, 166, 271, 263, 217, 305, 198, 391, 246, 289, 223, 172, 305, 214, 343, 279, 175, 174, 347, 878, 153, 244, 511, 420, 288, 222, 193, 296, 365, 321, 131, 160, 271, 114, 263, 246, 221, 255, 193, 154, 268, 185, 250, 290, 335, 207, 234, 660, 245, 140, 174, 278, 171, 343, 259, 201, 115, 174],
    
    "revenue": [3804.200000000008, 3698.700000000022, 3709.000000000014, 3767.9500000000257, 3684.5000000000005, 3704.1000000000126, 3675.0500000000056, 3801.9000000000137, 3690.35000000001, 3536.4500000000103, 3742.000000000017, 3688.300000000017, 3694.2500000000286, 3819.6000000000163, 3725.5000000000105, 3646.4999999999977, 3655.900000000008, 3824.500000000024, 3660.700000000008, 3543.7500000000114, 3608.0500000000147, 3630.000000000022, 3643.600000000016, 3650.100000000012, 3659.500000000005, 3705.7500000000127, 3665.3500000000085, 3613.15000000001, 3699.65000000001, 3651.2000000000235, 3706.8500000000113, 3734.2500000000236, 3724.050000000018, 3670.1000000000067, 3814.000000000006, 3712.400000000013, 3729.850000000015, 3605.1500000000196, 3649.350000000013, 3714.7000000000044, 3730.250000000012, 3653.20000000001, 3736.650000000004, 3636.4500000000116, 3720.7000000000253, 3791.45000000001, 3752.2500000000205, 3821.150000000008, 3670.8500000000167, 3603.7000000000085, 3614.7500000000077, 3667.7000000000153, 3708.5500000000143, 3661.4000000000106, 3823.45000000002, 3671.3500000000045, 3619.8500000000117, 3760.4000000000106, 3749.3500000000145, 3747.1500000000065, 3612.450000000008, 3694.9500000000185, 3619.100000000007, 3637.850000000016, 3687.6000000000026, 3644.900000000023, 3620.6500000000133, 3777.250000000007, 3703.45000000001, 3786.950000000006, 3709.800000000006, 3736.900000000018, 3755.700000000015, 3680.500000000015, 3753.3500000000113, 3706.2000000000144, 3809.4500000000176, 3638.850000000018, 3729.4500000000135, 3655.000000000002, 3618.1500000000055, 3669.6500000000137, 3724.2000000000044, 3697.2500000000173, 3638.000000000014, 3736.9000000000074, 3731.45000000001, 3635.9500000000107, 3768.2500000000095, 3672.4000000000137, 3680.6000000000145, 3669.1500000000106, 3652.8500000000186, 3712.000000000012, 3725.150000000017, 3557.8000000000097, 3621.350000000016, 3761.000000000017, 3713.950000000006, 3649.7000000000126, 3679.5000000000136, 3690.0500000000097, 3658.850000000012, 3642.550000000012, 3653.850000000017, 3778.5500000000284, 3773.4000000000156, 3750.3500000000067, 3676.8000000000116, 3742.450000000004, 3742.6500000000146, 3683.5000000000105, 3762.750000000018, 3651.5500000000166, 3710.80000000001, 3771.0500000000166, 3709.3000000000156, 3687.5000000000155, 3698.1000000000063, 3641.200000000014, 3731.5000000000055, 3764.2000000000203, 3745.1000000000095, 3714.5500000000125, 3704.8500000000085, 3619.750000000011, 3582.65000000001, 3657.8000000000256],
    "rebalancing": [1156.0, 1191.0, 1218.0, 1203.0, 1178.0, 1182.0, 1175.0, 1211.0, 1198.0, 1202.0, 1284.0, 1217.0, 1266.0, 1255.0, 1208.0, 1165.0, 1254.0, 1205.0, 1130.0, 1163.0, 1233.0, 1191.0, 1192.0, 1269.0, 1163.0, 1143.0, 1175.0, 1260.0, 1197.0, 1160.0, 1210.0, 1212.0, 1243.0, 1262.0, 1188.0, 1223.0, 1188.0, 1210.0, 1253.0, 1195.0, 1175.0, 1184.0, 1187.0, 1288.0, 1154.0, 1185.0, 1173.0, 1226.0, 1268.0, 1141.0, 1216.0, 1149.0, 1188.0, 1137.0, 1240.0, 1289.0, 1244.0, 1225.0, 1223.0, 1208.0, 1211.0, 1163.0, 1161.0, 1162.0, 1235.0, 1194.0, 1260.0, 1150.0, 1220.0, 1237.0, 1246.0, 1116.0, 1249.0, 1172.0, 1105.0, 1138.0, 1254.0, 1113.0, 1190.0, 1192.0, 1197.0, 1197.0, 1199.0, 1203.0, 1235.0, 1221.0, 1278.0, 1153.0, 1205.0, 1191.0, 1138.0, 1129.0, 1224.0, 1131.0, 1236.0, 1196.0, 1136.0, 1246.0, 1227.0, 1158.0, 1232.0, 1167.0, 1171.0, 1191.0, 1247.0, 1181.0, 1213.0, 1117.0, 1168.0, 1175.0, 1223.0, 1185.0, 1275.0, 1167.0, 1284.0, 1232.0, 1152.0, 1199.0, 1135.0, 1176.0, 1255.0, 1200.0, 1141.0, 1238.0, 1220.0, 1184.0, 1167.0, 1217.0]
        }

# base_results, full_results, no_price, no_xdiff
if __name__ == "__main__":
    full_df = pd.DataFrame({
        "base": {k: sum(v)/len(v) for k,v in base_results.items()},
        "full": {k: sum(v)/len(v) for k,v in full_results.items()},
        "no_price": {k: sum(v)/len(v) for k,v in no_price.items()},
        "no_xdiff": {k: sum(v)/len(v) for k,v in no_xdiff.items()},
        })

    print(f"full_df: {full_df}")
    full_np = full_df.to_numpy()
    print(f"full_np: {full_np}")
    X = np.arange(4)
    fig = plt.figure()
    ax = fig.add_axes([0,0,1,1])
    ax.bar(X + 0.25, full_np[1], color='g', width=0.25)
    ax.bar(X + 0, full_np[0], color='b', width=0.25)
    ax.bar(X + 0.5, full_np[2], color='r', width=0.25)
    ax.set_title("Revenue, Returns to Full Station, and Rebalancing Costs")
    plt.show()
