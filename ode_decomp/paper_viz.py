import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

base_results = {
        "bounces": [498, 1208, 488, 1058, 770, 513, 570, 1434, 1217, 463, 732, 556, 573, 689, 972, 467, 527, 663, 641, 486, 905, 557, 435, 522, 548, 529, 2078, 483, 889, 952, 1220, 814, 984, 810, 454, 768, 332, 636, 891, 663, 1696, 563, 561, 722, 1464, 447, 747, 521, 1080, 818, 611, 510, 515, 868, 948, 836, 1362, 475, 1025, 839, 386, 676, 717, 2052, 339, 480, 606, 847, 392, 894, 1001, 537, 432, 429, 929, 517, 621, 440, 1221, 1052, 526, 1730, 1268, 1112, 961, 1318, 517, 310, 496, 376, 363, 472, 579, 1234, 789, 357, 638, 770, 789, 789, 876, 633, 652, 562, 276, 275, 396, 515, 962, 906, 799, 585, 539, 981, 502, 623, 604, 793, 1165, 479, 454, 429, 647, 1707, 704, 633, 1469, 377],
    "revenue": [3704.0, 3706.0, 3814.0, 3717.0, 3765.0, 3752.0, 3795.0, 3795.0, 3742.0, 3817.0, 3880.0, 3787.0, 3822.0, 3746.0, 3772.0, 3819.0, 3824.0, 3784.0, 3696.0, 3711.0, 3866.0, 3780.0, 3750.0, 3797.0, 3668.0, 3760.0, 3768.0, 3744.0, 3812.0, 3698.0, 3880.0, 3755.0, 3787.0, 3793.0, 3787.0, 3846.0, 3795.0, 3727.0, 3837.0, 3781.0, 3798.0, 3785.0, 3817.0, 3788.0, 3769.0, 3876.0, 3795.0, 3737.0, 3889.0, 3686.0, 3832.0, 3784.0, 3860.0, 3781.0, 3859.0, 3792.0, 3675.0, 3736.0, 3840.0, 3780.0, 3828.0, 3831.0, 3795.0, 3831.0, 3834.0, 3821.0, 3784.0, 3814.0, 3917.0, 3718.0, 3736.0, 3717.0, 3783.0, 3744.0, 3871.0, 3783.0, 3665.0, 3822.0, 3750.0, 3948.0, 3755.0, 3797.0, 3730.0, 3937.0, 3856.0, 3807.0, 3863.0, 3715.0, 3642.0, 3899.0, 3757.0, 3888.0, 3752.0, 3815.0, 3828.0, 3667.0, 3823.0, 3780.0, 3917.0, 3879.0, 3781.0, 3829.0, 3673.0, 3744.0, 3672.0, 3710.0, 3813.0, 3749.0, 3771.0, 3793.0, 3716.0, 3869.0, 3826.0, 3772.0, 3725.0, 3787.0, 3740.0, 3876.0, 3762.0, 3701.0, 3816.0, 3912.0, 3777.0, 3721.0, 3757.0, 3654.0, 3812.0, 3847.0],
    "rebalancing": [1488.0, 1565.0, 1460.0, 1411.0, 1431.0, 1422.0, 1484.0, 1446.0, 1354.0, 1341.0, 1531.0, 1470.0, 1383.0, 1534.0, 1426.0, 1478.0, 1393.0, 1495.0, 1449.0, 1484.0, 1451.0, 1444.0, 1382.0, 1463.0, 1382.0, 1486.0, 1468.0, 1456.0, 1433.0, 1392.0, 1416.0, 1521.0, 1457.0, 1498.0, 1465.0, 1402.0, 1408.0, 1471.0, 1388.0, 1442.0, 1475.0, 1499.0, 1508.0, 1465.0, 1467.0, 1352.0, 1457.0, 1495.0, 1361.0, 1440.0, 1498.0, 1453.0, 1468.0, 1535.0, 1562.0, 1505.0, 1449.0, 1470.0, 1467.0, 1469.0, 1466.0, 1483.0, 1451.0, 1527.0, 1421.0, 1454.0, 1515.0, 1475.0, 1527.0, 1530.0, 1493.0, 1471.0, 1470.0, 1489.0, 1553.0, 1408.0, 1357.0, 1400.0, 1518.0, 1488.0, 1439.0, 1475.0, 1531.0, 1494.0, 1492.0, 1429.0, 1434.0, 1375.0, 1474.0, 1415.0, 1384.0, 1434.0, 1440.0, 1423.0, 1400.0, 1419.0, 1488.0, 1524.0, 1382.0, 1460.0, 1441.0, 1389.0, 1403.0, 1321.0, 1382.0, 1450.0, 1373.0, 1473.0, 1467.0, 1355.0, 1444.0, 1482.0, 1366.0, 1455.0, 1363.0, 1446.0, 1484.0, 1462.0, 1395.0, 1372.0, 1391.0, 1425.0, 1452.0, 1436.0, 1427.0, 1393.0, 1461.0, 1396.0]
        }
full_results = {
        "bounces": [291, 195, 272, 278, 287, 225, 295, 232, 287, 212, 215, 451, 212, 278, 394, 264, 247, 297, 174, 339, 266, 233, 285, 207, 175, 142, 218, 414, 241, 225, 168, 210, 307, 347, 354, 247, 235, 399, 230, 229, 143, 157, 117, 210, 267, 225, 410, 200, 426, 277, 217, 275, 323, 185, 537, 211, 253, 263, 207, 336, 269, 185, 343, 214, 215, 184, 220, 204, 274, 216, 187, 201, 232, 244, 260, 178, 250, 205, 166, 227, 208, 281, 249, 249, 340, 244, 200, 195, 176, 351, 212, 194, 212, 530, 180, 330, 226, 751, 478, 217, 274, 398, 193, 164, 187, 184, 243, 161, 176, 176, 235, 423, 184, 226, 186, 752, 212, 242, 175, 207, 189, 202, 163, 165, 195, 599, 175, 292],
    "revenue": [3930.6500000000024, 3869.999999999999, 3789.6499999999846, 3807.399999999993, 3768.4499999999966, 3869.9999999999977, 3842.649999999995, 3702.1499999999983, 3828.349999999994, 3869.699999999992, 3788.649999999986, 3923.199999999998, 3844.149999999981, 3795.649999999998, 3928.949999999989, 3776.749999999992, 3801.299999999994, 3763.4499999999953, 3733.1999999999935, 3828.599999999992, 3836.5999999999985, 3721.4999999999955, 3851.499999999992, 3768.699999999994, 3828.6499999999974, 3790.249999999993, 3868.6999999999866, 3814.2, 3764.5, 3899.2000000000003, 3841.4499999999957, 3806.899999999992, 3758.7999999999984, 3910.5999999999963, 3738.6999999999916, 3778.249999999995, 3874.3499999999954, 3806.749999999983, 3724.4999999999964, 3802.9499999999935, 3735.45, 3803.350000000001, 3808.450000000001, 3746.699999999996, 3881.6999999999953, 3816.200000000001, 3790.549999999998, 3837.8500000000017, 3824.7999999999915, 3847.849999999994, 3762.6499999999883, 3898.5499999999947, 3882.4999999999877, 3772.1999999999957, 3852.75, 3830.149999999993, 3802.849999999996, 3845.7999999999906, 3877.85, 3889.849999999993, 3807.0999999999954, 3879.7999999999906, 3809.500000000001, 3794.5999999999926, 3733.149999999999, 3814.0499999999947, 3752.74999999999, 3831.2499999999955, 3785.7499999999923, 3891.6999999999875, 3736.449999999993, 3815.949999999998, 3848.4500000000003, 3786.3999999999983, 3866.5999999999985, 3865.7499999999964, 3702.0000000000014, 3933.1999999999884, 3824.6999999999957, 3826.7499999999955, 3847.1000000000004, 3846.6500000000046, 3847.3500000000004, 3773.349999999998, 3768.499999999995, 3928.1499999999883, 3860.8499999999995, 3770.9999999999986, 3790.4000000000015, 3797.8499999999876, 3819.3499999999995, 3873.549999999987, 3823.149999999993, 3795.4499999999944, 3738.849999999994, 3894.7499999999854, 3898.0999999999967, 3780.19999999999, 3692.699999999996, 3696.499999999991, 3848.2999999999934, 3911.300000000002, 3705.549999999998, 3848.999999999996, 3835.7999999999893, 3847.6999999999966, 3876.7499999999964, 3768.2999999999965, 3863.499999999999, 3798.549999999996, 3819.3999999999965, 3829.9999999999936, 3880.199999999989, 3765.899999999991, 3764.2999999999943, 3732.2499999999936, 3929.099999999993, 3787.250000000009, 3819.8999999999874, 3768.949999999984, 3785.6499999999833, 3694.849999999998, 3776.449999999992, 3738.59999999999, 3721.349999999998, 3761.549999999996, 3711.0999999999976, 3791.6000000000013],
    "rebalancing": [1297.0, 1261.0, 1249.0, 1250.0, 1351.0, 1331.0, 1255.0, 1367.0, 1344.0, 1288.0, 1231.0, 1374.0, 1235.0, 1262.0, 1353.0, 1338.0, 1166.0, 1138.0, 1275.0, 1276.0, 1257.0, 1278.0, 1299.0, 1244.0, 1235.0, 1256.0, 1313.0, 1306.0, 1243.0, 1279.0, 1213.0, 1355.0, 1272.0, 1243.0, 1289.0, 1202.0, 1271.0, 1239.0, 1287.0, 1206.0, 1330.0, 1293.0, 1301.0, 1239.0, 1248.0, 1245.0, 1332.0, 1307.0, 1201.0, 1310.0, 1338.0, 1359.0, 1281.0, 1284.0, 1266.0, 1222.0, 1193.0, 1411.0, 1258.0, 1247.0, 1224.0, 1275.0, 1240.0, 1274.0, 1267.0, 1285.0, 1297.0, 1201.0, 1309.0, 1336.0, 1383.0, 1260.0, 1192.0, 1240.0, 1261.0, 1390.0, 1282.0, 1342.0, 1252.0, 1223.0, 1228.0, 1292.0, 1267.0, 1226.0, 1336.0, 1267.0, 1238.0, 1199.0, 1265.0, 1192.0, 1275.0, 1262.0, 1248.0, 1281.0, 1141.0, 1346.0, 1324.0, 1363.0, 1270.0, 1241.0, 1309.0, 1291.0, 1261.0, 1278.0, 1177.0, 1315.0, 1241.0, 1226.0, 1303.0, 1229.0, 1313.0, 1244.0, 1281.0, 1283.0, 1206.0, 1165.0, 1361.0, 1177.0, 1295.0, 1265.0, 1250.0, 1266.0, 1278.0, 1238.0, 1316.0, 1246.0, 1227.0, 1335.0]
}

no_xdiff = {
    "bounces": [263, 255, 342, 217, 143, 135, 305, 134, 414, 359, 162, 223, 181, 244, 208, 198, 311, 235, 386, 225, 458, 157, 283, 287, 300, 172, 227, 311, 277, 276, 206, 317, 420, 691, 186, 303, 298, 525, 278, 235, 292, 217, 323, 226, 209, 129, 412, 222, 240, 157, 345, 190, 273, 140, 257, 184, 461, 147, 202, 151, 256, 167, 490, 147, 182, 287, 192, 219, 347, 265, 161, 145, 133, 274, 228, 206, 282, 584, 127, 199, 478, 247, 168, 253, 324, 238, 199, 299, 452, 306, 179, 389, 220, 171, 267, 240, 298, 299, 229, 219, 259, 276, 149, 309, 387, 189, 182, 301, 275, 143, 425, 192, 283, 293, 229, 277, 253, 344, 332, 154, 447, 292, 222, 329, 300, 242, 184, 166],
    "revenue": [3704.500000000045, 3728.700000000046, 3680.3500000000463, 3658.0500000000397, 3674.550000000037, 3669.400000000044, 3708.950000000039, 3698.400000000047, 3744.8500000000467, 3642.2000000000317, 3743.8000000000357, 3673.3500000000436, 3686.7500000000396, 3628.9000000000433, 3733.750000000046, 3615.6500000000387, 3823.750000000056, 3703.5500000000475, 3591.600000000045, 3643.600000000042, 3693.450000000048, 3650.350000000042, 3661.1000000000363, 3680.2500000000396, 3729.4000000000447, 3675.2000000000453, 3708.7500000000505, 3764.7500000000496, 3685.4500000000503, 3733.6000000000477, 3648.200000000044, 3673.500000000041, 3690.5000000000346, 3850.000000000056, 3701.3500000000345, 3583.7500000000314, 3786.900000000038, 3696.4500000000457, 3740.00000000005, 3691.350000000035, 3712.3500000000467, 3762.050000000035, 3831.80000000004, 3742.150000000043, 3622.1000000000427, 3749.6000000000367, 3734.25000000004, 3713.8500000000518, 3659.5000000000437, 3782.7500000000387, 3779.2500000000377, 3686.2000000000353, 3757.850000000039, 3729.100000000047, 3648.3500000000454, 3701.7500000000464, 3693.450000000045, 3572.8000000000397, 3875.700000000057, 3704.150000000036, 3753.300000000039, 3685.4500000000417, 3698.900000000057, 3660.450000000045, 3786.550000000054, 3743.4000000000365, 3581.150000000034, 3676.3500000000413, 3649.5500000000466, 3714.3000000000375, 3728.6500000000387, 3710.050000000033, 3617.050000000033, 3684.950000000051, 3693.2500000000473, 3639.000000000044, 3640.100000000048, 3810.4000000000447, 3617.850000000041, 3654.4500000000417, 3711.200000000046, 3639.700000000047, 3688.350000000042, 3622.6500000000556, 3675.300000000048, 3738.250000000043, 3621.2000000000403, 3727.200000000059, 3721.700000000044, 3645.1000000000454, 3636.7500000000396, 3604.250000000043, 3713.2000000000385, 3669.3500000000345, 3792.200000000035, 3688.200000000039, 3714.6500000000365, 3804.700000000049, 3701.4500000000353, 3674.1000000000386, 3711.100000000052, 3703.3500000000467, 3610.700000000033, 3558.500000000041, 3679.2500000000423, 3656.600000000042, 3517.700000000036, 3702.500000000027, 3739.3500000000454, 3776.850000000054, 3767.8000000000375, 3589.2500000000377, 3668.450000000042, 3622.7000000000457, 3782.8500000000495, 3695.5500000000416, 3585.7500000000446, 3665.600000000045, 3754.5500000000457, 3617.000000000044, 3786.8500000000386, 3746.450000000043, 3654.45000000004, 3755.500000000054, 3684.3000000000343, 3679.9000000000397, 3733.350000000041, 3708.3000000000425],
    "rebalancing": [1230.0, 1217.0, 1224.0, 1181.0, 1207.0, 1129.0, 1184.0, 1202.0, 1208.0, 1274.0, 1224.0, 1151.0, 1157.0, 1153.0, 1210.0, 1165.0, 1289.0, 1219.0, 1266.0, 1100.0, 1203.0, 1228.0, 1191.0, 1177.0, 1277.0, 1220.0, 1160.0, 1179.0, 1277.0, 1182.0, 1131.0, 1204.0, 1189.0, 1273.0, 1202.0, 1209.0, 1256.0, 1207.0, 1267.0, 1170.0, 1253.0, 1223.0, 1234.0, 1183.0, 1128.0, 1220.0, 1222.0, 1286.0, 1306.0, 1256.0, 1307.0, 1190.0, 1269.0, 1222.0, 1262.0, 1146.0, 1224.0, 1209.0, 1185.0, 1251.0, 1200.0, 1255.0, 1213.0, 1135.0, 1197.0, 1155.0, 1199.0, 1214.0, 1148.0, 1220.0, 1183.0, 1201.0, 1163.0, 1231.0, 1213.0, 1134.0, 1217.0, 1163.0, 1199.0, 1266.0, 1245.0, 1187.0, 1207.0, 1275.0, 1226.0, 1275.0, 1243.0, 1253.0, 1094.0, 1236.0, 1263.0, 1180.0, 1186.0, 1134.0, 1115.0, 1240.0, 1163.0, 1281.0, 1231.0, 1189.0, 1225.0, 1202.0, 1215.0, 1226.0, 1203.0, 1176.0, 1194.0, 1119.0, 1241.0, 1125.0, 1261.0, 1131.0, 1100.0, 1160.0, 1216.0, 1283.0, 1216.0, 1079.0, 1225.0, 1160.0, 1223.0, 1214.0, 1168.0, 1196.0, 1208.0, 1212.0, 1118.0, 1254.0]
        }

no_price = {
    "bounces": [501, 290, 222, 309, 355, 249, 264, 288, 246, 244, 223, 222, 248, 364, 307, 285, 189, 515, 292, 244, 279, 188, 198, 474, 346, 175, 218, 219, 253, 213, 259, 340, 235, 209, 362, 232, 289, 184, 169, 279, 258, 148, 184, 427, 332, 217, 281, 188, 163, 238, 213, 264, 279, 278, 215, 366, 218, 192, 268, 248, 504, 168, 230, 300, 217, 137, 239, 191, 158, 351, 193, 773, 426, 260, 329, 336, 233, 269, 306, 326, 307, 190, 371, 233, 327, 258, 249, 232, 186, 233, 199, 325, 330, 301, 342, 262, 561, 280, 258, 331, 193, 172, 226, 245, 224, 577, 243, 250, 167, 329, 390, 283, 452, 292, 236, 288, 228, 309, 278, 307, 138, 283, 224, 574, 242, 1036, 353, 302],
    "revenue": [3857.0, 3897.0, 3884.0, 3965.0, 3904.0, 3864.0, 3929.0, 3845.0, 3873.0, 4007.0, 3964.0, 3940.0, 3967.0, 3858.0, 3836.0, 3809.0, 3825.0, 3867.0, 4022.0, 3969.0, 3928.0, 3909.0, 3969.0, 4007.0, 3799.0, 3862.0, 3891.0, 3887.0, 3796.0, 3865.0, 3921.0, 3899.0, 3863.0, 3996.0, 3862.0, 3943.0, 3924.0, 3789.0, 3893.0, 3971.0, 3771.0, 3901.0, 3888.0, 3987.0, 3943.0, 3879.0, 3916.0, 3869.0, 3901.0, 3861.0, 3890.0, 3908.0, 3960.0, 3908.0, 3895.0, 3981.0, 3840.0, 3843.0, 3803.0, 3841.0, 3868.0, 3958.0, 3858.0, 3898.0, 3845.0, 3880.0, 3919.0, 4030.0, 3831.0, 3936.0, 3892.0, 3793.0, 3846.0, 3952.0, 4069.0, 3950.0, 3916.0, 3935.0, 3899.0, 3866.0, 3890.0, 3880.0, 3910.0, 3858.0, 3835.0, 3889.0, 3925.0, 3834.0, 3779.0, 3849.0, 3927.0, 3757.0, 3898.0, 3934.0, 4029.0, 4010.0, 3903.0, 3904.0, 3797.0, 3829.0, 3832.0, 3841.0, 3955.0, 3998.0, 4012.0, 3950.0, 3880.0, 3849.0, 3834.0, 3969.0, 3904.0, 3951.0, 3931.0, 3852.0, 3934.0, 3907.0, 3934.0, 3820.0, 3852.0, 4003.0, 3869.0, 3914.0, 3862.0, 3835.0, 3857.0, 3843.0, 3744.0, 3941.0],
    "rebalancing": [1531.0, 1461.0, 1443.0, 1588.0, 1547.0, 1488.0, 1606.0, 1475.0, 1469.0, 1497.0, 1444.0, 1522.0, 1571.0, 1500.0, 1489.0, 1542.0, 1516.0, 1544.0, 1564.0, 1443.0, 1476.0, 1473.0, 1507.0, 1513.0, 1514.0, 1436.0, 1509.0, 1546.0, 1505.0, 1428.0, 1414.0, 1474.0, 1497.0, 1537.0, 1572.0, 1511.0, 1512.0, 1386.0, 1352.0, 1556.0, 1481.0, 1527.0, 1501.0, 1542.0, 1565.0, 1495.0, 1529.0, 1497.0, 1439.0, 1430.0, 1487.0, 1435.0, 1426.0, 1493.0, 1548.0, 1561.0, 1367.0, 1412.0, 1454.0, 1554.0, 1583.0, 1573.0, 1540.0, 1413.0, 1552.0, 1445.0, 1512.0, 1649.0, 1419.0, 1557.0, 1523.0, 1456.0, 1484.0, 1424.0, 1591.0, 1650.0, 1419.0, 1570.0, 1623.0, 1624.0, 1508.0, 1439.0, 1653.0, 1467.0, 1474.0, 1494.0, 1466.0, 1555.0, 1533.0, 1397.0, 1449.0, 1392.0, 1602.0, 1488.0, 1487.0, 1497.0, 1628.0, 1579.0, 1504.0, 1423.0, 1489.0, 1528.0, 1650.0, 1525.0, 1564.0, 1593.0, 1619.0, 1545.0, 1524.0, 1491.0, 1540.0, 1582.0, 1603.0, 1538.0, 1579.0, 1551.0, 1537.0, 1502.0, 1383.0, 1582.0, 1498.0, 1604.0, 1485.0, 1579.0, 1453.0, 1465.0, 1453.0, 1591.0]
}

# base_results, full_results, no_price, no_xdiff
def get_profits(in_dict):
    return [(x-(y/2)-z) for x, y, z in zip(in_dict["revenue"], in_dict["bounces"], in_dict["rebalancing"])]

if __name__ == "__main__":
    plt.rcParams.update({"mathtext.default": "regular"})

    base_results["profit"] = get_profits(base_results)
    full_results["profit"] = get_profits(full_results)
    no_price["profit"] = get_profits(no_price)
    no_xdiff["profit"] = get_profits(no_xdiff)
    full_df = pd.DataFrame({
        "base": {k: sum(v)/len(v) for k,v in base_results.items()},
        "full": {k: sum(v)/len(v) for k,v in full_results.items()},
        "no_price": {k: sum(v)/len(v) for k,v in no_price.items()},
        "no_xdiff": {k: sum(v)/len(v) for k,v in no_xdiff.items()},
        })

    print(f"full_df: {full_df}")
    full_np = full_df.to_numpy()
    print(f"full_np: {full_np}")
    X = np.arange(4)
    fig = plt.figure()
    ax = fig.add_subplot(111)
    ax.grid(visible=True,axis='y',alpha=0.2,zorder=0)
    ax.bar(X + 0, full_np[1], color='#5A58F0', width=0.15,zorder=3)
    ax.bar(X + 0.15, full_np[0], color='#15ED6B', width=0.15,zorder=3)
    ax.bar(X + 0.3, full_np[2], color='#F0544A', width=0.15,zorder=3)
    ax.bar(X + 0.45, full_np[3], color='#EDC921', width=0.15,zorder=3)
    ax.set_ylim([0,5500])
    #ax.set_title("Rewards and Penalties by Decision Variables Chosen")
    ax.legend(["Revenue", "Returns to Full Station", "Rebalancing Costs", "Profit"])
    ax.set_xticks(X+0.22)
    ax.set_xticklabels(["Baseline", "$x_0$ and p", "$x_0$ only", "p only"])
    ax.set_ylabel("Total Reward/Penalty")
    ax.set_xlabel("Decision Variables")
    plt.show()

    # save as pdf
    fig.savefig("paper_viz.pdf", bbox_inches='tight')


